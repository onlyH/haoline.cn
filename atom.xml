<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郝洁的小栈</title>
  
  <subtitle>shaun web</subtitle>
  <link href="http://onlyh.github.io/atom.xml" rel="self"/>
  
  <link href="http://onlyh.github.io/"/>
  <updated>2023-03-07T13:09:45.277Z</updated>
  <id>http://onlyh.github.io/</id>
  
  <author>
    <name>郝洁</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ES6系列-类与对象</title>
    <link href="http://onlyh.github.io/post/8282d6ae.html"/>
    <id>http://onlyh.github.io/post/8282d6ae.html</id>
    <published>2023-03-07T09:41:41.211Z</published>
    <updated>2023-03-07T13:09:45.277Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 类与对象</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">        <span class="title function_">constructor</span>(<span class="params">name = <span class="string">&#x27;yoyo&#x27;</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> v_person = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;v&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(v_person) <span class="comment">//Person &#123;name: &quot;v&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Child</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span> &#123;</span><br><span class="line">        <span class="title function_">constructor</span>(<span class="params">name = <span class="string">&#x27;child&#x27;</span></span>) &#123;</span><br><span class="line">            <span class="comment">//  super()会使用父类的所有</span></span><br><span class="line">            <span class="variable language_">super</span>(name)</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">type</span> = <span class="string">&#x27;dog&#x27;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title class_">Child</span>()) <span class="comment">//Child &#123;name: &quot;child&quot;, type: &quot;dog&quot;&#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title class_">Child</span>(<span class="string">&#x27;hello&#x27;</span>)) <span class="comment">//Child &#123;name: &quot;hello&quot;, type: &quot;dog&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getter,setter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">        <span class="title function_">constructor</span>(<span class="params">name = <span class="string">&#x27;yoy&#x27;</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span> <span class="title function_">longName</span>() &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&#x27;读取属性&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span> <span class="title function_">longName</span>(<span class="params">value</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> v = <span class="keyword">new</span> <span class="title class_">Person</span>()</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(v.<span class="property">longName</span>, <span class="string">&#x27;getter&#x27;</span>)<span class="comment">//yoy读取属性 getter</span></span><br><span class="line">    v.<span class="property">longName</span> = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(v.<span class="property">longName</span>) <span class="comment">//hello读取属性</span></span><br><span class="line">    <span class="keyword">let</span> vs = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;lele&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(vs.<span class="property">longName</span>, <span class="string">&#x27;setter&#x27;</span>) <span class="comment">//lele读取属性 setter</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 静态方法，不是使用类的实例去调用</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">        <span class="title function_">constructor</span>(<span class="params">name = <span class="string">&#x27;yoyo&#x27;</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">static</span> <span class="title function_">tail</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this is tail&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Person</span>.<span class="title function_">tail</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 静态属性 ===&gt; 直接在类上定义</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">        <span class="title function_">constructor</span>(<span class="params">name = <span class="string">&#x27;uouo&#x27;</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">static</span> <span class="title function_">tail</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this is tail&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Person</span>.<span class="property">numberId</span> = <span class="number">23333</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property">numberId</span>) <span class="comment">//2333</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>截取字符串最方便的办法</title>
    <link href="http://onlyh.github.io/post/ed250810.html"/>
    <id>http://onlyh.github.io/post/ed250810.html</id>
    <published>2023-03-07T09:41:41.210Z</published>
    <updated>2023-03-07T13:09:45.275Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今日解析YouTube视频，采用了YouTube的iframe。<br>其中有一坑是YouTube不允许输入第三方链接，也就是不解析，解决的办法就是<br><code>http://www.youtube.com/embed/VIDEO_ID</code></p><ul><li><p>例如：<br><code>https://www.youtube.com/watch?v=78tNYZUS-ps</code><br>改为：<br><code>http://www.youtube.com/embed/78tNYZUS-ps</code></p></li><li><p>为了判断输入的URL是否是一个有效的，我们采取了后台解析id的办法，返回title。<br>那么我就需要将用户输入的链接进行截取。试了好几种办法，虽然都能实现，但是觉得麻烦，最终选择了，split()方法，他可以将一个字符串分割成字符串数组。</p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="built_in">url</span> = <span class="string">&#x27;https://www.youtube.com/watch?v=78tNYZUS-ps&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> front = <span class="built_in">url</span>.split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">let</span> end = <span class="built_in">url</span>.split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">console</span>.log(front,end) <span class="comment">//https://www.youtube.com/watch?v 78tNYZUS-ps</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;今日解析YouTube视频，采用了YouTube的iframe。&lt;br&gt;其中有一坑是YouTube不允许输入第三方链接，也就是不解析，解决的办法就是&lt;br&gt;&lt;code&gt;http://www.youtube.com/embed/VIDEO_ID&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例如：&lt;br&gt;&lt;code&gt;https://www.youtube.com/watch?v=78tNYZUS-ps&lt;/code&gt;&lt;br&gt;改为：&lt;br&gt;&lt;code&gt;http://www.youtube.com/embed/78tNYZUS-ps&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为了判断输入的URL是否是一个有效的，我们采取了后台解析id的办法，返回title。&lt;br&gt;那么我就需要将用户输入的链接进行截取。试了好几种办法，虽然都能实现，但是觉得麻烦，最终选择了，split()方法，他可以将一个字符串分割成字符串数组。&lt;/p&gt;
&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;https://www.youtube.com/watch?v=78tNYZUS-ps&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; front = &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;.split(&lt;span class=&quot;string&quot;&gt;&amp;#x27;=&amp;#x27;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; end = &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;.split(&lt;span class=&quot;string&quot;&gt;&amp;#x27;=&amp;#x27;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(front,end) &lt;span class=&quot;comment&quot;&gt;//https://www.youtube.com/watch?v 78tNYZUS-ps&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>富文本-select改进</title>
    <link href="http://onlyh.github.io/post/e0f8fd55.html"/>
    <id>http://onlyh.github.io/post/e0f8fd55.html</id>
    <published>2023-03-07T09:41:41.210Z</published>
    <updated>2023-03-07T13:09:45.276Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前在项目中，做了一个富文本编辑器，第一次用的是原生js实现，第二次用vue实现功能，在select里面定义可以选择字体的大小，当时采取的是@input去实现，无聊时读了下vue文档，发现其实。。是可以改进的，比如说v-model是一个语法糖，文档是这样说的：</p><ul><li>自定义事件也可以用于创建支持 v-model 的自定义输入组件<br><code>input v-nodel=searchText</code><br>等价于：<figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">input</span> v-bind:value=<span class="string">&#x27;searchText&#x27;</span> v-<span class="keyword">on</span>:<span class="keyword">input</span>=<span class="string">&#x27;$event.target.value&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>而我当时的实现就有一些复杂<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> &lt;select name=<span class="string">&quot;fontSize&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;fontSize&quot;</span> @change=<span class="string">&quot;showSize($event)&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">:value</span>=<span class="string">&quot;ops.value&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-for</span>=<span class="string">&quot;ops in fontSize&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:selected</span>=<span class="string">&quot;ops.value == 16 ? true: &#x27;&#x27; &quot;</span>&gt;</span>&#123;&#123;ops.value&#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"> &lt;/select&gt;</span><br><span class="line"></span><br><span class="line"><span class="attr">showSize</span>: <span class="keyword">function</span> (<span class="params">ev</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> execFontSize = <span class="keyword">function</span> (<span class="params">size, unit</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> spanString = $(<span class="string">&#x27;&lt;span/&gt;&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;text&#x27;</span>: <span class="variable language_">document</span>.<span class="title function_">getSelection</span>()</span><br><span class="line">    &#125;).<span class="title function_">css</span>(</span><br><span class="line">        &#123;<span class="string">&#x27;font-size&#x27;</span>: size + unit, <span class="string">&#x27;color&#x27;</span>: <span class="string">`#<span class="subst">$&#123;<span class="variable language_">this</span>.designColor&#125;</span>`</span>&#125;).<span class="title function_">prop</span>(<span class="string">&#x27;outerHTML&#x27;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;insertHTML&#x27;</span>, <span class="literal">false</span>, spanString);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> value = ev.<span class="property">target</span>.<span class="property">value</span>;</span><br><span class="line">    <span class="title function_">execFontSize</span>(value, <span class="string">&#x27;px&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>嗯嗯，改起来~~</li></ul>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;之前在项目中，做了一个富文本编辑器，第一次用的是原生js实现，第二次用vue实现功能，在select里面定义可以选择字体的大小，当时采取的是@input去实现，无聊时读了下vue文档，发现其实。。是可以改进的，比如说v-model是一个语法糖，文档是这样说的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义事件也可以用于创建支持 v-model 的自定义输入组件&lt;br&gt;&lt;code&gt;input v-nodel=searchText&lt;/code&gt;&lt;br&gt;等价于：&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; v-bind:value=&lt;span class=&quot;string&quot;&gt;&amp;#x27;searchText&amp;#x27;&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;:&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#x27;$event.target.value&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
而我当时的实现就有一些复杂&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;select name=&lt;span class=&quot;string&quot;&gt;&amp;quot;fontSize&amp;quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;fontSize&amp;quot;&lt;/span&gt; @change=&lt;span class=&quot;string&quot;&gt;&amp;quot;showSize($event)&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;ops.value&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;v-for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;ops in fontSize&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;:selected&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;ops.value == 16 ? true: &amp;#x27;&amp;#x27; &amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;ops.value&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/select&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;showSize&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;ev&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; execFontSize = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;size, unit&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; spanString = $(&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;span/&amp;gt;&amp;#x27;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;#x27;text&amp;#x27;&lt;/span&gt;: &lt;span class=&quot;variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;getSelection&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;).&lt;span class=&quot;title function_&quot;&gt;css&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;span class=&quot;string&quot;&gt;&amp;#x27;font-size&amp;#x27;&lt;/span&gt;: size + unit, &lt;span class=&quot;string&quot;&gt;&amp;#x27;color&amp;#x27;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;`#&lt;span class=&quot;subst&quot;&gt;$&amp;#123;&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.designColor&amp;#125;&lt;/span&gt;`&lt;/span&gt;&amp;#125;).&lt;span class=&quot;title function_&quot;&gt;prop&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;outerHTML&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;execCommand&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;insertHTML&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, spanString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value = ev.&lt;span class=&quot;property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title function_&quot;&gt;execFontSize&lt;/span&gt;(value, &lt;span class=&quot;string&quot;&gt;&amp;#x27;px&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
嗯嗯，改起来~~&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="vue" scheme="http://onlyh.github.io/categories/vue/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="功能" scheme="http://onlyh.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>封装--逐步运动</title>
    <link href="http://onlyh.github.io/post/5df27e92.html"/>
    <id>http://onlyh.github.io/post/5df27e92.html</id>
    <published>2023-03-07T09:41:41.209Z</published>
    <updated>2023-03-07T13:09:45.273Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//html</span></span><br><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        div &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            opacity: .3;</span><br><span class="line">            background-color: yellow;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script src=&quot;moveOne.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var tag = $tag(&#x27;div&#x27;)</span><br><span class="line">        tag.onmouseover = function() &#123;</span><br><span class="line">            starSport(tag, &#x27;width&#x27;, 400, function() &#123;</span><br><span class="line">                starSport(tag, &#x27;opacity&#x27;, 100)</span><br><span class="line"></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        tag.onmouseout = function() &#123;</span><br><span class="line">            starSport(tag, &#x27;width&#x27;, 200, function() &#123;</span><br><span class="line">                starSport(tag, &#x27;opacity&#x27;, 30)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//moveOne.js</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">$tag</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(id)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取样式属性</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getStyle</span>(<span class="params">obj, attr</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (obj.<span class="property">currentStyle</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> obj.<span class="property">currentStyle</span>[attr]</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getComputedStyle</span>(obj, <span class="literal">false</span>)[attr]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//运动</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">starSport</span>(<span class="params">obj, attr, target, fn</span>) &#123; <span class="comment">//当前对象，属性，变化对象</span></span><br><span class="line">    obj.<span class="property">timer</span> = <span class="literal">null</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>)</span><br><span class="line">    obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> current = <span class="number">0</span></span><br><span class="line">        <span class="comment">//定义当前属性</span></span><br><span class="line">        <span class="keyword">if</span> (attr === <span class="string">&#x27;opacity&#x27;</span>) &#123;</span><br><span class="line">            current = <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="built_in">parseFloat</span>(<span class="title function_">getStyle</span>(obj, attr) * <span class="number">100</span>))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            current = <span class="built_in">parseInt</span>(<span class="title function_">getStyle</span>(obj, attr))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义速度</span></span><br><span class="line">        <span class="keyword">var</span> speed = (target - current) / <span class="number">8</span></span><br><span class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(speed) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(speed)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果当前值等于目标值</span></span><br><span class="line">        <span class="keyword">if</span> (current === target) &#123;</span><br><span class="line">            <span class="comment">//如果第一次运动停止</span></span><br><span class="line">            <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>)</span><br><span class="line">            <span class="keyword">if</span> (fn) &#123;</span><br><span class="line">                <span class="title function_">fn</span>()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (attr === <span class="string">&#x27;opacity&#x27;</span>) &#123;</span><br><span class="line">                obj.<span class="property">style</span>[attr] = (current + speed) / <span class="number">100</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                obj.<span class="property">style</span>[attr] = current + speed + <span class="string">&#x27;px&#x27;</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">30</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="封装" scheme="http://onlyh.github.io/tags/%E5%B0%81%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>异步回调处理</title>
    <link href="http://onlyh.github.io/post/bd495c40.html"/>
    <id>http://onlyh.github.io/post/bd495c40.html</id>
    <published>2023-03-07T09:41:41.209Z</published>
    <updated>2023-03-07T13:09:45.274Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前异步回调总是出现问题，先上一段错误的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">callbacking = <span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">callbacking</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">callbacking</span> = <span class="literal">true</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">callback</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">callbacking</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码会走<code>this.callbacking = false</code>但是没有意义，如果callback是同步的，这个if在callback执行期间不再会走第二次，如果是异步的，这样写是不对的。我的callback是异步的。。所以这样写的效果是这样的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">callbacking</span> = <span class="literal">true</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">callback</span>() <span class="comment">//发起异步请求后callback函数结束（请求未完成）</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">callbacking</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>也就是说，callbacking在异步请求没有结束的时候就已经回归到false了，无法起到想要的作用。应该这样写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">callbacking</span> = <span class="literal">true</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">callback</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">callbacking</span> = <span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>callback接受的函数需要在异步完成后执行。这样才能保证指定代码在异步操作完成后才执行，比如说在<code>this.callbacking = true</code>上锁后，是希望在异步操作结束后才解锁。</p><p>或者使用promise，在.then().then解决</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;之前异步回调总是出现问题，先上一段错误的代码&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;callbacking = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;callbacking&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;callbacking&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;callback&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;callbacking&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>动态添加属性（set）</title>
    <link href="http://onlyh.github.io/post/1ae3cf86.html"/>
    <id>http://onlyh.github.io/post/1ae3cf86.html</id>
    <published>2023-03-07T09:41:41.208Z</published>
    <updated>2023-03-07T13:09:45.269Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用vue动态的添加属性，假设从父组件<code>props</code>传来一个数组，要为数组中的每一项添加一个属性，每个属性点击一次就+1，大于2的时候就为0，（0，1，2），添加另一组属性，当为0的时候显示一张图，当为1的时候，显示另一张图片，当为1的时候再换一张图片。当点击某一个按钮，剩余其他的状态要归0，图片显示0的对应的图片。<br>代码实现如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">itemsTrans</span>:&#123;&#125;,</span><br><span class="line"><span class="attr">currentSort</span>: <span class="number">0</span>,<span class="comment">//当前排序</span></span><br><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">titles</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">i,index</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">itemsTrans</span>,<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>`</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">itemsTrans</span>,<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>img`</span>,<span class="string">&#x27;xxx.png&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="title function_">changeToggle</span>(<span class="params">item,index</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">titles</span>.<span class="property">length</span>;i++) &#123; <span class="comment">//返回默认状态</span></span><br><span class="line">            <span class="keyword">if</span>(i !== index) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">itemsTrans</span>[<span class="string">`toggle<span class="subst">$&#123;i&#125;</span>`</span>] = <span class="number">0</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">itemsTrans</span>[<span class="string">`toggle<span class="subst">$&#123;i&#125;</span>img`</span>] = <span class="string">&#x27;xxx.png&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">itemsTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>`</span>] += <span class="number">1</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">itemTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>`</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">currentSort</span> = <span class="number">1</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">itemTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>img`</span>] = <span class="string">&#x27;yyy.png&#x27;</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">itemTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>`</span>] == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">currentSort</span> = <span class="number">2</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">itemTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>img`</span>] = <span class="string">&#x27;zzz.png&#x27;</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">itemTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>`</span>] &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">itemTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>img`</span>] = <span class="number">0</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">itemTrans</span>[<span class="string">`toggle<span class="subst">$&#123;index&#125;</span>`</span>] = <span class="string">&#x27;xxx.png&#x27;</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">currentSort</span> = <span class="number">0</span></span><br><span class="line">              &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果要做数据加载分页的话一定要先切割，以免出现数据重复。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">items</span>.<span class="title function_">splice</span>(<span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">items</span>.<span class="property">length</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">content</span>.<span class="property">items</span>.<span class="title function_">push</span>(...items)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;使用vue动态的添加属性，假设从父组件&lt;code&gt;props&lt;/code&gt;传来一个数组，要为数组中的每一项添加一个属性，每个属性点击一次就+1，大于2的时候就为0，（0，1，2），添加另一组属性，当为0的时候显示一张图，当为1的时候，显示另一张图片，当为1的时候再换一张图片。当点击某一个按钮，剩余其他的状态要归0，图片显示0的对应的图片。&lt;br&gt;代码实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;itemsTrans&lt;/span&gt;:&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;currentSort&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//当前排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title function_&quot;&gt;created&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;content&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;titles&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;i,index&lt;/span&gt;)=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemsTrans&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;`&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemsTrans&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;img`&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;#x27;xxx.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;methods&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title function_&quot;&gt;changeToggle&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;content&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;titles&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;length&lt;/span&gt;;i++) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//返回默认状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i !== index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemsTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;`&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemsTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;img`&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;#x27;xxx.png&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemsTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;`&lt;/span&gt;] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;`&lt;/span&gt;] == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;content&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;currentSort&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;img`&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;#x27;yyy.png&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;`&lt;/span&gt;] == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;content&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;currentSort&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;img`&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;#x27;zzz.png&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;`&lt;/span&gt;] &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;img`&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;itemTrans&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;`toggle&lt;span class=&quot;subst&quot;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;`&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;#x27;xxx.png&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;content&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;currentSort&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="vue" scheme="http://onlyh.github.io/categories/vue/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>webpack.config.js配置错误问题</title>
    <link href="http://onlyh.github.io/post/5c044416.html"/>
    <id>http://onlyh.github.io/post/5c044416.html</id>
    <published>2023-03-07T09:41:41.181Z</published>
    <updated>2023-03-07T13:09:45.262Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今日搭建webpack的时候，一直在报错，其中一个问题是<code>Cannot find module &#39;@babel/core&#39;问题</code><br>最初以为是babel-core没有安装上。重装了好几遍babel-core还是不行。对照以前的项目,发现babel-loader的版本不一样,之前的是@7.1.5版本,而现在是@8.0.0版本。</p><ul><li>解决办法：降版本。。。<br><code>npm uninstall babel-loader npm install babel-loader@7.1.5</code></li></ul><h4 id="官方文档说："><a href="#官方文档说：" class="headerlink" title="官方文档说："></a>官方文档说：</h4><h5 id="官方默认babel-loader-babel-对应的版本需要一致-即babel-loader需要搭配最新版本babel"><a href="#官方默认babel-loader-babel-对应的版本需要一致-即babel-loader需要搭配最新版本babel" class="headerlink" title="官方默认babel-loader | babel 对应的版本需要一致: 即babel-loader需要搭配最新版本babel"></a>官方默认babel-loader | babel 对应的版本需要一致: 即babel-loader需要搭配最新版本babel</h5>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;今日搭建webpack的时候，一直在报错，其中一个问题是&lt;code&gt;Cannot find module &amp;#39;@babel/core&amp;#39;问题&lt;/code&gt;&lt;br&gt;最初以为是babel-core没有安装上。重装了好几遍babel-core还是不行。对照以前的项目,发现babel-loader的版本不一样,之前的是@7.1.5版本,而现在是@8.0.0版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决办法：降版本。。。&lt;br&gt;&lt;code&gt;npm uninstall babel-loader npm install babel-loader@7.1.5&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="webpack" scheme="http://onlyh.github.io/categories/webpack/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="感悟" scheme="http://onlyh.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>webpack配置</title>
    <link href="http://onlyh.github.io/post/81e824f6.html"/>
    <id>http://onlyh.github.io/post/81e824f6.html</id>
    <published>2023-03-07T09:41:41.181Z</published>
    <updated>2023-03-07T13:09:45.263Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="webpack属性配置"><a href="#webpack属性配置" class="headerlink" title="webpack属性配置"></a>webpack属性配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">entry</span>:&#123;</span><br><span class="line">        <span class="comment">//main默认入口，可以是多入口</span></span><br><span class="line">        <span class="attr">main</span>:<span class="string">&#x27;./src/main.js&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//出口</span></span><br><span class="line">    <span class="attr">output</span>:&#123;</span><br><span class="line">        <span class="attr">filemane</span>:<span class="string">&#x27;./build.js&#x27;</span>,</span><br><span class="line">        <span class="comment">//指定js文件</span></span><br><span class="line">        <span class="attr">path</span>:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;..&#x27;</span>,<span class="string">&#x27;dist&#x27;</span>,)</span><br><span class="line">        <span class="comment">//最好是绝对路径，代表当前目录的上一级的dist</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>:&#123;</span><br><span class="line">           <span class="comment">// 一样的功能rules:   webpack2.x之后新加的</span></span><br><span class="line">           <span class="attr">loaders</span>:[       <span class="title function_">require</span>(<span class="params"><span class="string">&#x27;./a.css||./a.js&#x27;</span></span>)</span><br><span class="line">               &#123;<span class="attr">test</span>:<span class="regexp">/\.css$/</span>,</span><br><span class="line">                <span class="attr">loader</span>:<span class="string">&#x27;style-loader!css-loader&#x27;</span>,</span><br><span class="line">              <span class="comment">//  顺序是反过来的2!1</span></span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                <span class="attr">test</span>:<span class="regexp">/\.(jpg|svg)$/</span>,</span><br><span class="line">                <span class="attr">loader</span>:<span class="string">&#x27;url-loader?limit=4096&amp;name=[name].[ext]&#x27;</span>,</span><br><span class="line">               <span class="comment">// 顺序是反过来的2!1 </span></span><br><span class="line">              <span class="comment">//  [name].[ext]内置提供的，因为本身是先读这个文件</span></span><br><span class="line">                <span class="attr">options</span>:&#123;</span><br><span class="line">                   <span class="attr">limit</span>:<span class="number">4096</span>,</span><br><span class="line">                   <span class="attr">name</span>:<span class="string">&#x27;[name].[ext]&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>:[</span><br><span class="line">        <span class="comment">//  插件的执行顺序是依次执行的</span></span><br><span class="line">           <span class="keyword">new</span> <span class="title function_">htmlWebpackPlugin</span>(&#123;</span><br><span class="line">               <span class="attr">template</span>:<span class="string">&#x27;./src/index.html&#x27;</span>,</span><br><span class="line">               &#125;)</span><br><span class="line">               <span class="comment">//将src下的template属性描述的文件根据当前配置的output.path，将文件移动到该目录</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="webpack-es6"><a href="#webpack-es6" class="headerlink" title="webpack-es6"></a>webpack-es6</h4><ul><li>vue默认支持es6的模块导入导出</li><li>babel–&gt;babel-core</li></ul><h4 id="es6模块"><a href="#es6模块" class="headerlink" title="es6模块"></a>es6模块</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//default</span></span><br><span class="line"><span class="keyword">import</span> [,...xxx] [,..<span class="property">form</span>] <span class="string">&#x27;./xxx.ext&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> obj;</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明式</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> obj = xxx</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> obj2 = &#123;&#125;</span><br><span class="line"><span class="keyword">export</span> &#123;stu&#125;<span class="comment">//单独导出</span></span><br><span class="line"><span class="keyword">import</span> &#123;obj,obj2,stu&#125; form <span class="string">&#x27;./xxx.js&#x27;</span>    <span class="comment">//直接使用obj</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>默认导出和声明式导入在使用上的区别<ul><li>声明式导入的时候，必须{名称} 名称要一致（按需导入)</li><li>默认导入，可以随意的使用变量名</li></ul></li></ul> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">default</span>:<span class="string">&quot;我是默认导出的结果&quot;</span>    </span><br><span class="line">        <span class="keyword">import</span> xxx <span class="keyword">from</span> <span class="string">&#x27;./cal.js&#x27;</span>会获取到整个对象的<span class="keyword">default</span>属性</span><br><span class="line"><span class="attr">obj1</span>:<span class="string">&quot;我是声明式导出1&quot;</span></span><br><span class="line"><span class="attr">obj2</span>:<span class="string">&quot;我是声明式导出2&quot;</span> </span><br><span class="line"><span class="attr">obj3</span>:<span class="string">&quot;我是声明式导出3&quot;</span>     <span class="keyword">import</span> &#123;obj1,obj2&#125;</span><br><span class="line"><span class="attr">obj4</span>:<span class="string">&quot;我是声明式导出4&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">import</span> * <span class="keyword">as</span> allObj <span class="keyword">from</span> <span class="string">&#x27;./cal.js&#x27;</span>;  获取的就是一整个对象</span><br></pre></td></tr></table></figure><ul><li>import 和export一定写在顶级，不要包含在{}内</li></ul><ul><li><p>build：打包配置所在的文件夹</p></li><li><p>打包的配置</p></li><li><p>开发项目的源码</p></li><li><p>App.vue入口组件(.vue都是一个组件)</p></li><li><p>main.js项目入口的文件</p></li><li><p>static：静态资源</p></li><li><p>webpack.base.conf.js 打包核心的配置与config-&gt;index.js可以合并成为一个</p></li><li><p>build.js打生产包</p></li><li><p>package.json</p></li></ul><ol><li>项目描述</li><li>dependencies：依赖库</li><li>devDependencied：开发依赖库</li><li>engines： 引擎</li><li>browserslist：浏览器列表</li></ol>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h4 id=&quot;webpack属性配置&quot;&gt;&lt;a href=&quot;#webpack属性配置&quot; class=&quot;headerlink&quot; title=&quot;webpack属性配置&quot;&gt;&lt;/a&gt;webpack属性配置&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; path = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;path&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;module&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;exports&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;entry&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//main默认入口，可以是多入口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;main&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;#x27;./src/main.js&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//出口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;output&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;filemane&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;#x27;./build.js&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//指定js文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;:path.&lt;span class=&quot;title function_&quot;&gt;join&lt;/span&gt;(__dirname,&lt;span class=&quot;string&quot;&gt;&amp;#x27;..&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//最好是绝对路径，代表当前目录的上一级的dist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;module&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;// 一样的功能rules:   webpack2.x之后新加的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;attr&quot;&gt;loaders&lt;/span&gt;:[       &lt;span class=&quot;title function_&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;./a.css||./a.js&amp;#x27;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#123;&lt;span class=&quot;attr&quot;&gt;test&lt;/span&gt;:&lt;span class=&quot;regexp&quot;&gt;/\.css$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;loader&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;#x27;style-loader!css-loader&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;comment&quot;&gt;//  顺序是反过来的2!1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;test&lt;/span&gt;:&lt;span class=&quot;regexp&quot;&gt;/\.(jpg|svg)$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;loader&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;#x27;url-loader?limit=4096&amp;amp;name=[name].[ext]&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;// 顺序是反过来的2!1 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;comment&quot;&gt;//  [name].[ext]内置提供的，因为本身是先读这个文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;options&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;attr&quot;&gt;limit&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;#x27;[name].[ext]&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;plugins&lt;/span&gt;:[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//  插件的执行顺序是依次执行的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;htmlWebpackPlugin&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;attr&quot;&gt;template&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;#x27;./src/index.html&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//将src下的template属性描述的文件根据当前配置的output.path，将文件移动到该目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="webpack" scheme="http://onlyh.github.io/categories/webpack/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="感悟" scheme="http://onlyh.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>webpack端口号</title>
    <link href="http://onlyh.github.io/post/4f59fc8e.html"/>
    <id>http://onlyh.github.io/post/4f59fc8e.html</id>
    <published>2023-03-07T09:41:41.181Z</published>
    <updated>2023-03-07T13:09:45.265Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今日，修改webpack端口号，遇到了问题<br>本来是在webpack.config.js文件夹里添加了devServer属性</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">   <span class="attr">devServer:</span> &#123;</span><br><span class="line">        <span class="attr">port:</span> <span class="number">2333</span>,</span><br><span class="line">        <span class="attr">host:</span> <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">        <span class="attr">overlay:</span> &#123;</span><br><span class="line">            <span class="attr">errors:</span> <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">hot:</span> <span class="literal">true</span></span><br><span class="line">    &#125;<span class="string">,</span></span><br><span class="line"></span><br><span class="line">     <span class="attr">plugins:</span> [</span><br><span class="line">        <span class="string">new</span> <span class="string">webpack.HotModuleReplacementPlugin()</span>,]</span><br><span class="line"><span class="string">```</span>   </span><br><span class="line"><span class="string">`webpack-dev-server`</span> <span class="string">带</span> <span class="string">`hot`</span> <span class="string">参数的时候，要去掉config里面的</span> <span class="string">HotModuleReplacementPlugin</span></span><br><span class="line"><span class="string">不然会内存溢出。</span></span><br><span class="line"><span class="string">解决办法：删除</span></span><br></pre></td></tr></table></figure><p>plugins: [<br>        new webpack.HotModuleReplacementPlugin()<br>]</p><pre><code>将`&quot;dev&quot;: &quot;webpack-dev-server --mode development&quot;,`改为`&quot;dev&quot;: &quot;webpack-dev-server --hot --inline&quot;,`启动服务并不能自动刷新，要自动刷新需要用到webpack-dev-server --hot --inline当使用webpack-dev-server --hot --inline命令时，在每次修改文件，是将文件打包　　保存在内存中并没有写在磁盘里(默认是根据webpack.config.js打包文件，通过--config xxxx.js修改)，这种打包得到的文件　　和项目根目录中的index.html位于同一级（你看不到，因为　　它在内存中并没有在磁盘里）。使用webpack命令将打包后的文件保存在磁盘中　　例如在index.html文件中引入通过webpack-dev-server --hot --inline打包的build.js`&lt;script src=&quot;build.js&quot;&gt;&lt;/script&gt;`　　在index.html文件中引入通过webpack命令打包的build.js`　&lt;script src=&quot;./build/build.js&quot;&gt;&lt;/script&gt;`</code></pre>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;今日，修改webpack端口号，遇到了问题&lt;br&gt;本来是在webpack.config.js文件夹里添加了devServer属性&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;attr&quot;&gt;devServer:&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2333&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;host:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;0.0.0.0&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;overlay:&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;errors:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;hot:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attr&quot;&gt;plugins:&lt;/span&gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;webpack.HotModuleReplacementPlugin()&lt;/span&gt;,]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;```&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`webpack-dev-server`&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;带&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`hot`&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;参数的时候，要去掉config里面的&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;HotModuleReplacementPlugin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;不然会内存溢出。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;解决办法：删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>ES6系列-模块化</title>
    <link href="http://onlyh.github.io/post/530d047.html"/>
    <id>http://onlyh.github.io/post/530d047.html</id>
    <published>2023-03-07T09:41:41.176Z</published>
    <updated>2023-03-07T13:09:45.249Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> A = <span class="number">123</span>; <span class="comment">//导出一个变量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;class&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;A,test,<span class="title class_">Hello</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;./index&#x27;</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> lesson <span class="keyword">from</span> <span class="string">&#x27;./index&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="params">lesson.A</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> A = <span class="number">123</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">        <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">        A,</span><br><span class="line">        test,</span><br><span class="line">        <span class="title class_">Hello</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> 任意变量名 <span class="keyword">from</span> <span class="string">&#x27;./index&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>ES6系列-promise</title>
    <link href="http://onlyh.github.io/post/735a00e9.html"/>
    <id>http://onlyh.github.io/post/735a00e9.html</id>
    <published>2023-03-07T09:41:41.176Z</published>
    <updated>2023-03-07T13:09:45.250Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// promise</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//传统es5回调方式解决异步</span></span><br><span class="line">    <span class="keyword">let</span> ajax = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待下一步加载。。。&#x27;</span>)</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            callback &amp;&amp; callback.<span class="title function_">call</span>()</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">ajax</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;来了来了&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//执行a-b-c-d-e-f....</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">ajax</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待setTimeOut2加载&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;  <span class="comment">//执行，中断</span></span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>()</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">ajax</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise&#x27;</span>, <span class="string">&#x27;setTimeOut2&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">ajax</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待第一次加载&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>()</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">ajax</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待第二次&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>()</span><br><span class="line">            &#125;, <span class="number">2000</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是第三次加载&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>()</span><br><span class="line">                &#125;, <span class="number">3000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;最后一次加载&#x27;</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果中间出现错误，如何捕获</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> ajax = <span class="keyword">function</span> (<span class="params">num</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;判断num&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (num &lt; <span class="number">5</span>) &#123;</span><br><span class="line">                <span class="title function_">resolve</span>()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;传错了&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">ajax</span>(<span class="number">6</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;log&#x27;</span>, <span class="number">6</span>)</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;catch&#x27;</span>, err)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">ajax</span>(<span class="number">2</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;log&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;catch&#x27;</span>, err)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用场景promise.all,promise</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 所有图都加载后显示到页面</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">loadImg</span>(<span class="params">src</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">            img.<span class="property">src</span> = src</span><br><span class="line">            img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>(img)</span><br><span class="line">            &#125;</span><br><span class="line">            img.<span class="property">onerror</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//图片加载完成onload</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加到页面</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showImg</span>(<span class="params">imgs</span>) &#123;</span><br><span class="line">        imgs.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(item)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// promise.all把多个promise实例当成一个promise实例</span></span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">all</span>([</span><br><span class="line">        <span class="title function_">loadImg</span>(<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1545736426664&amp;di=219db669df4a813bcca53e582da7582e&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201706%2F12%2F20170612130531_wXcaQ.thumb.700_0.jpeg&#x27;</span>),</span><br><span class="line">        <span class="title function_">loadImg</span>(<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1545736426664&amp;di=2c20d892a361fa4313ae380600c434b8&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn%2Fw440h329%2F20171229%2Fbe5c-fypyuve2937030.jpg&#x27;</span>),</span><br><span class="line">        <span class="title function_">loadImg</span>(<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1545736426663&amp;di=1ce727cefe866cd3baa0bcdc64dd8cb7&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201706%2F12%2F20170612130914_CrVz5.jpeg&#x27;</span>)</span><br><span class="line">    ]).<span class="title function_">then</span>(showImg)</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//先到先得,有一本图片加载完就加载到页面</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">loadImg</span>(<span class="params">src</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">            img.<span class="property">src</span> = src</span><br><span class="line">            img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>(img)</span><br><span class="line">            &#125;</span><br><span class="line">            img.<span class="property">onerror</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showImg</span>(<span class="params">imgs</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(imgs)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">race</span>([</span><br><span class="line">        <span class="title function_">loadImg</span>(<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1545736426664&amp;di=219db669df4a813bcca53e582da7582e&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201706%2F12%2F20170612130531_wXcaQ.thumb.700_0.jpeg&#x27;</span>),</span><br><span class="line">        <span class="title function_">loadImg</span>(<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1545736426664&amp;di=2c20d892a361fa4313ae380600c434b8&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn%2Fw440h329%2F20171229%2Fbe5c-fypyuve2937030.jpg&#x27;</span>),</span><br><span class="line">        <span class="title function_">loadImg</span>(<span class="string">&#x27;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1545736426663&amp;di=1ce727cefe866cd3baa0bcdc64dd8cb7&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201706%2F12%2F20170612130914_CrVz5.jpeg&#x27;</span>)</span><br><span class="line">    ]).<span class="title function_">then</span>(showImg)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>rgb转化为16进制</title>
    <link href="http://onlyh.github.io/post/dac90b82.html"/>
    <id>http://onlyh.github.io/post/dac90b82.html</id>
    <published>2023-03-07T09:41:41.176Z</published>
    <updated>2023-03-07T13:09:45.252Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>项目中有个需求是写一个颜色选择器，默认有16个色块可以点击，用户也可以自己输入6位16进制字符，然后动态的给显示用户所输入的颜色。<br>我采用的是vue的<code>:class</code>和<code>:style</code>去完成这个需求。<br>做完之后，发现一个很尴尬的问题，如果我在输入框输入过值，那么他一定会覆盖clss的样式，也就是说，即使我点击色块，颜色也不会出现，于是想到一个解决办法，就是当我点击色块的时候，将色块的颜色值显示到输入框中。<br>那么。如何获取到class中的css样式呢？？<br>我采用了jquery的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">color</span> <span class="operator">=</span> $(`.$&#123;item.color&#125;`).css(<span class="string">&#x27;backgroundColor&#x27;</span>) <span class="comment">//获取到颜色值</span></span><br></pre></td></tr></table></figure><p>额。。。获取到的竟然是个rgb()…….转换起来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">rgb</span> <span class="operator">=</span> a.split(<span class="string">&#x27;,&#x27;</span>);  <span class="comment">//将三个数值获取出</span></span><br><span class="line"><span class="type">var</span> <span class="variable">r</span> <span class="operator">=</span> parseInt(rgb[<span class="number">0</span>].split(<span class="string">&#x27;(&#x27;</span>)[<span class="number">1</span>]);<span class="comment">//第一个值</span></span><br><span class="line"><span class="type">var</span> <span class="variable">g</span> <span class="operator">=</span> parseInt(rgb[<span class="number">1</span>]);<span class="comment">//第二个值</span></span><br><span class="line"><span class="type">var</span> <span class="variable">b</span> <span class="operator">=</span> parseInt(rgb[<span class="number">2</span>].split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">0</span>]);<span class="comment">//第三个值</span></span><br><span class="line"><span class="type">var</span> <span class="variable">hex</span> <span class="operator">=</span> <span class="string">&quot;#&quot;</span> + ((<span class="number">1</span> &lt;&lt; <span class="number">24</span>) + (r &lt;&lt; <span class="number">16</span>) + (g &lt;&lt; <span class="number">8</span>) + b).toString(<span class="number">16</span>).slice(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>原谅我没有把他封装起来。。。。。<br>最后的<code>hex</code>就是rgb转换后的结果，也就是一个十六进制的色值。<br>呼呼~~一定有比这个更简单的方法吧，思考中。。。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;项目中有个需求是写一个颜色选择器，默认有16个色块可以点击，用户也可以自己输入6位16进制字符，然后动态的给显示用户所输入的颜色。&lt;br&gt;我采用的是vue的&lt;code&gt;:class&lt;/code&gt;和&lt;code&gt;:style&lt;/code&gt;去完成这个需求。&lt;br&gt;做完之后，发现一个很尴尬的问题，如果我在输入框输入过值，那么他一定会覆盖clss的样式，也就是说，即使我点击色块，颜色也不会出现，于是想到一个解决办法，就是当我点击色块的时候，将色块的颜色值显示到输入框中。&lt;br&gt;那么。如何获取到class中的css样式呢？？&lt;br&gt;我采用了jquery的方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; $(`.$&amp;#123;item.color&amp;#125;`).css(&lt;span class=&quot;string&quot;&gt;&amp;#x27;backgroundColor&amp;#x27;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//获取到颜色值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>js日常使用</title>
    <link href="http://onlyh.github.io/post/b7acde18.html"/>
    <id>http://onlyh.github.io/post/b7acde18.html</id>
    <published>2023-03-07T09:41:41.175Z</published>
    <updated>2023-03-07T13:09:45.245Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text = <span class="string">&#x27;purple haze&#x27;</span></span><br><span class="line">text[<span class="string">&#x27;length&#x27;</span>]</span><br><span class="line">text.<span class="property">length</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象所扮演的主要角色实际上是一个属性的集合</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cat = &#123;</span><br><span class="line">    <span class="attr">color</span>:<span class="string">&#x27;gray&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;spot&#x27;</span>,</span><br><span class="line">    <span class="attr">size</span>:<span class="number">46</span></span><br><span class="line">&#125;</span><br><span class="line">cat.<span class="property">size</span>; <span class="comment">//46</span></span><br><span class="line"><span class="keyword">delete</span> cat.<span class="property">size</span>;</span><br><span class="line">cat.<span class="property">size</span>;<span class="comment">//undefind</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> empty = &#123;&#125;</span><br><span class="line">empty.<span class="property">notReally</span> = <span class="number">1000</span></span><br><span class="line">empty;<span class="comment">//&#123;notReally: 1000&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> thing = &#123;</span><br><span class="line">    <span class="string">&#x27;gabba&#x27;</span>:<span class="string">&#x27;hey&#x27;</span>,</span><br><span class="line">    <span class="number">5</span>:<span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line">thing[<span class="string">&#x27;5&#x27;</span>] <span class="comment">//10</span></span><br><span class="line">thing[<span class="number">2</span>+<span class="number">3</span>] <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//中括号会将表达式转化为字符串来判断是否有该属性的名称。</span></span><br><span class="line"><span class="comment">//也可以把变量当成属性名称</span></span><br><span class="line"><span class="keyword">var</span> propertyName = <span class="string">&#x27;length&#x27;</span></span><br><span class="line"><span class="keyword">var</span> text = <span class="string">&#x27;coco&#x27;</span></span><br><span class="line">text[propertyName] <span class="comment">//4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//操作符in可以用来判断一个对象是否有某个属性，产生的是布尔值</span></span><br><span class="line"><span class="keyword">var</span> chineseBox = &#123;&#125;</span><br><span class="line">chineseBox.<span class="property">content</span> = chineseBox;</span><br><span class="line"><span class="string">&#x27;content&#x27;</span> <span class="keyword">in</span> chineseBox <span class="comment">//true</span></span><br><span class="line"><span class="keyword">debugger</span></span><br><span class="line"><span class="string">&#x27;content&#x27;</span> <span class="keyword">in</span> chineseBox.<span class="property">content</span><span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象即集合</span></span><br><span class="line"><span class="keyword">var</span> set = &#123;<span class="string">&#x27;spot&#x27;</span>:<span class="literal">true</span>&#125;</span><br><span class="line">set[<span class="string">&#x27;white&#x27;</span>] =<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> set[<span class="string">&#x27;spot&#x27;</span>]</span><br><span class="line"><span class="string">&#x27;aa&#x27;</span> <span class="keyword">in</span> set;<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//相同对象的两个引用和包含相同属性的两个不同对象是有区别的。</span></span><br><span class="line"><span class="keyword">var</span> object1 = &#123;<span class="attr">value</span>:<span class="number">10</span>&#125;</span><br><span class="line"><span class="keyword">var</span> object2 = object1</span><br><span class="line"><span class="keyword">var</span> object3 = &#123;<span class="attr">value</span>:<span class="number">10</span>&#125;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line">object1 == object2 <span class="comment">//true</span></span><br><span class="line">object1 == object3 <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">object1和object2是两个变量，抓取的是相同的值，这里只有一个实际对象，</span></span><br><span class="line"><span class="comment">因此修改了object1的值，同时也改变了object2的值，</span></span><br><span class="line"><span class="comment">object3指向的是另外一个对象，默认和object1有相同的属性，但各自单独运行</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">比较对象时，js中的==操作符只有在赋予的两个值都完全相同时才能返回true，</span></span><br><span class="line"><span class="comment">比较两个内容相同的不同对象将返回false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象即集合</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;lele&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;shuan&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`name:<span class="subst">$&#123;i&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">range</span>(<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> arr = []</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;=item; i++) &#123;</span><br><span class="line">        arr.<span class="title function_">push</span>(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">range</span>(<span class="number">4</span>) <span class="comment">//01234</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// split()将一个字符串分解成一个数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> words = <span class="string">&#x27;this is word&#x27;</span></span><br><span class="line">words.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>) <span class="comment">//空格！！！</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//  如何测试一个段落是否以某个特定单词开头</span></span><br><span class="line"><span class="comment">// charAt()---&gt;用于从某个字符串中获取指定的字符</span></span><br><span class="line"><span class="keyword">var</span> cat = <span class="string">&#x27;born 15-11-2003&#x27;</span></span><br><span class="line">cat.<span class="title function_">charAt</span>(<span class="number">0</span>) ==<span class="string">&#x27;b&#x27;</span> &amp;&amp; cat.<span class="title function_">charAt</span>(<span class="number">1</span>) == <span class="string">&#x27;o&#x27;</span> &amp;&amp; cat.<span class="title function_">charAt</span>(<span class="number">2</span>) ==<span class="string">&#x27;r&#x27;</span> &amp;&amp; cat.<span class="title function_">charAt</span>(<span class="number">3</span>) == <span class="string">&#x27;n&#x27;</span><span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat.<span class="title function_">slice</span>(<span class="number">0</span>,<span class="number">4</span>) ==<span class="string">&#x27;born&#x27;</span><span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startsWidth</span>(<span class="params">str,comp</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">slice</span>(<span class="number">0</span>,comp.<span class="property">length</span>) == comp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果指定的位置没有字符，charAt将返回空字符，而slice则只是将不存在的内容忽略掉。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//indexOf可以找出字符串第一次出现的位置或者截取字符串中的子串</span></span><br><span class="line"><span class="comment">//如果slice只是一个参数，他将返回从指定位置一直到字符串结束位置之间的字符串</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">catName</span>(<span class="params">paragraph</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> colon = paragraph.<span class="title function_">indexOf</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> paragraph.<span class="title function_">slice</span>(colon+<span class="number">2</span>).<span class="title function_">split</span>(<span class="string">&quot;, &quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>js条件语句</title>
    <link href="http://onlyh.github.io/post/d6d2b6df.html"/>
    <id>http://onlyh.github.io/post/d6d2b6df.html</id>
    <published>2023-03-07T09:41:41.175Z</published>
    <updated>2023-03-07T13:09:45.246Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="使用Array-includes来处理多重条件"><a href="#使用Array-includes来处理多重条件" class="headerlink" title="使用Array.includes来处理多重条件"></a>使用Array.includes来处理多重条件</h4><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes">Array.includes</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bad</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">fn</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(fn === <span class="string">&#x27;apply&#x27;</span> || fn == <span class="string">&#x27;pear&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果筛选条件多</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">param</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fruits = [<span class="string">&#x27;apply&#x27;</span>,<span class="string">&#x27;pear&#x27;</span>,<span class="string">&#x27;banana&#x27;</span>] <span class="comment">//条件提取到数组</span></span><br><span class="line">    <span class="keyword">if</span>(fruits.<span class="title function_">includes</span>(param)) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>少写嵌套，尽早返回<ul><li>如果没有水果，抛出错误</li><li>如果该水果的数量大于10，将其打印出来<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bad</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">param, num</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fruit = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;cherry&#x27;</span>]</span><br><span class="line">      <span class="comment">// 条件 1：fruit 必须有值</span></span><br><span class="line">    <span class="keyword">if</span> (param) &#123;</span><br><span class="line">            <span class="comment">// 条件 2：必须存在</span></span><br><span class="line">        <span class="keyword">if</span> (fruit.<span class="title function_">includes</span>(param)) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">        <span class="comment">//数量大于 10</span></span><br><span class="line">            <span class="keyword">if</span> (num &gt; <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;more&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;no frulte&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试结果</span></span><br><span class="line"><span class="title function_">test</span>(<span class="literal">null</span>); <span class="comment">// 报错：No fruits</span></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;apple&#x27;</span>); <span class="comment">//red</span></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;apple&#x27;</span>, <span class="number">20</span>) <span class="comment">//red</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">p,num</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fruits = [<span class="string">&#x27;apply&#x27;</span>,<span class="string">&#x27;pear&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span>(!p) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(fruits.<span class="title function_">includes</span>(p)) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span>(num&gt;<span class="number">10</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;good&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">p,num</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fruits = [<span class="string">&#x27;apply&#x27;</span>,<span class="string">&#x27;pear&#x27;</span>,<span class="string">&#x27;chreey&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span>(!p) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(!fruits.<span class="title function_">includes</span>(p)) <span class="keyword">return</span>  <span class="comment">//不是直接返回</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(num&gt;<span class="number">10</span>) <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;good&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="使用函数默认参数和解构"><a href="#使用函数默认参数和解构" class="headerlink" title="使用函数默认参数和解构"></a>使用函数默认参数和解构</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">fruit,num</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!fruit) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">let</span> q = num || <span class="number">1</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`we have <span class="subst">$&#123;q&#125;</span> <span class="subst">$&#123;fruit&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试结果</span></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;banana&#x27;</span>); <span class="comment">// We have 1 banana!</span></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;apple&#x27;</span>, <span class="number">2</span>); <span class="comment">// We have 2 apple!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">fruit,num = <span class="number">1</span></span>) &#123; </span><br><span class="line">    <span class="keyword">if</span>(!fruit) <span class="keyword">return</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`we have <span class="subst">$&#123;fruit&#125;</span> <span class="subst">$&#123;num&#125;</span>`</span>)</span><br><span class="line"> &#125;  </span><br><span class="line"><span class="comment">//如果fruit是一个对象</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">fruit</span>) &#123;</span><br><span class="line">     <span class="keyword">if</span>(fruit &amp;&amp; fruit.<span class="property">name</span>) &#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(fruit.<span class="property">name</span>)</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;unknow&#x27;</span>)</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试结果</span></span><br><span class="line"><span class="title function_">test</span>(<span class="literal">undefined</span>); <span class="comment">// unknown</span></span><br><span class="line"><span class="title function_">test</span>(&#123; &#125;); <span class="comment">// unknown</span></span><br><span class="line"><span class="title function_">test</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;apple&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125;); <span class="comment">// apple</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以通过默认参数和解构赋值的方法来避免写出 fruit &amp;&amp; fruit.name 这种条件。</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">&#123;name&#125; =&#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name || <span class="string">&#x27;unknow&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解构只适用于对象（Object）</span></span><br></pre></td></tr></table></figure><h4 id="相较于-switch，Map-x2F-Object-也许是更好的选择"><a href="#相较于-switch，Map-x2F-Object-也许是更好的选择" class="headerlink" title="相较于 switch，Map &#x2F; Object 也许是更好的选择"></a>相较于 switch，Map &#x2F; Object 也许是更好的选择</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">color</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span>(color) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;red&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>];</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;yellow&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pineapple&#x27;</span>];</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;purple&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;plum&#x27;</span>];</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试结果</span></span><br><span class="line"><span class="title function_">test</span>(<span class="literal">null</span>); <span class="comment">// []</span></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;yellow&#x27;</span>); <span class="comment">// [&#x27;banana&#x27;, &#x27;pineapple&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fruit = &#123;</span><br><span class="line">    <span class="attr">red</span>: [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>],</span><br><span class="line">    <span class="attr">yellow</span>: [<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pineapple&#x27;</span>],</span><br><span class="line">    <span class="attr">purple</span>: [<span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;plum&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">color</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> fruit[color] || []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Map</span></span><br><span class="line"><span class="keyword">const</span> fruit = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">.<span class="title function_">set</span>(<span class="string">&#x27;red&#x27;</span>, [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>])</span><br><span class="line">.<span class="title function_">set</span>(<span class="string">&#x27;yellow&#x27;</span>, [<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pineapple&#x27;</span>])</span><br><span class="line">.<span class="title function_">set</span>(<span class="string">&#x27;purple&#x27;</span>, [<span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;plum&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">color</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> fruit[color] || []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Array.filter</span></span><br><span class="line"><span class="keyword">const</span> fruit = [</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;apple&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125;, </span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;strawberry&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125;, </span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;banana&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span> &#125;, </span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;pineapple&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span> &#125;, </span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;grape&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;, </span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;plum&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">color</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> fruit.<span class="title function_">filter</span>(<span class="function"><span class="params">f</span> =&gt;</span>f.<span class="property">color</span> = color)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用-Array-every-和-Array-some-来处理全部-x2F-部分满足条件"><a href="#使用-Array-every-和-Array-some-来处理全部-x2F-部分满足条件" class="headerlink" title="使用 Array.every 和 Array.some 来处理全部&#x2F;部分满足条件"></a>使用 Array.every 和 Array.some 来处理全部&#x2F;部分满足条件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits =[</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;apple&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;banana&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;grape&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;  </span><br><span class="line">    <span class="keyword">let</span> isAll = <span class="literal">true</span></span><br><span class="line">    <span class="comment">//所有水果都必须是红色</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> f <span class="keyword">of</span> fruits) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!isAll) <span class="keyword">break</span></span><br><span class="line">        isAll = (f.<span class="property">color</span> ==<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(isAll) <span class="comment">//false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Array.every</span></span><br><span class="line"><span class="keyword">const</span> fruits = [</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;apple&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;banana&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;grape&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//所有水果必须都是红色</span></span><br><span class="line">    <span class="keyword">const</span> isAll = fruits.<span class="title function_">every</span>(<span class="function"><span class="params">f</span> =&gt;</span>f.<span class="property">color</span> ==<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(isAll) <span class="comment">//false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Array.some</span></span><br><span class="line">  <span class="keyword">const</span> fruits = [</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;apple&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;banana&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;grape&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//至少一个水果是红色</span></span><br><span class="line">    <span class="keyword">const</span> isAll = fruits.<span class="title function_">some</span>(<span class="function"><span class="params">f</span> =&gt;</span>f.<span class="property">color</span>==<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(isAll) <span class="comment">//true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h4 id=&quot;使用Array-includes来处理多重条件&quot;&gt;&lt;a href=&quot;#使用Array-includes来处理多重条件&quot; class=&quot;headerlink&quot; title=&quot;使用Array.includes来处理多重条件&quot;&gt;&lt;/a&gt;使用Array.includes来处理多重条件&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;Array.includes&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="感悟" scheme="http://onlyh.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>gulp了解</title>
    <link href="http://onlyh.github.io/post/17516d98.html"/>
    <id>http://onlyh.github.io/post/17516d98.html</id>
    <published>2023-03-07T09:41:41.173Z</published>
    <updated>2023-03-07T13:09:45.239Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>安装 gulp <code>$ npm install --global gulp</code></li><li>任务管理文件 <code>gulpfile.js</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> shelljs = <span class="built_in">require</span>(<span class="string">&#x27;shelljs&#x27;</span>)</span><br><span class="line"><span class="comment">//定义任务，默认default</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">   <span class="comment">// console.log(&#x27;this is deafult&#x27;)</span></span><br><span class="line">   <span class="comment">//执行</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>运行 <code>$ gulp</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="gulp" scheme="http://onlyh.github.io/categories/gulp/"/>
    
    
    <category term="感悟" scheme="http://onlyh.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
    <category term="语言" scheme="http://onlyh.github.io/tags/%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>html组件</title>
    <link href="http://onlyh.github.io/post/eb80735.html"/>
    <id>http://onlyh.github.io/post/eb80735.html</id>
    <published>2023-03-07T09:41:41.173Z</published>
    <updated>2023-03-07T13:09:45.241Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="今日读了掘金上面的一篇文章，讲的是html组件。"><a href="#今日读了掘金上面的一篇文章，讲的是html组件。" class="headerlink" title="今日读了掘金上面的一篇文章，讲的是html组件。"></a>今日读了掘金上面的一篇文章，讲的是html组件。</h1><h4 id="四大-Web-组件标准"><a href="#四大-Web-组件标准" class="headerlink" title="四大 Web 组件标准"></a>四大 Web 组件标准</h4><p>四大 Web 组件标准分别为：HTML Template、Shadow DOM、Custom Elements 和 HTML Imports。实际上其中一个已经被废弃了，所以变成“三大”了。</p><p>HTML Template,简单的讲也就是 HTML5 中的<code> &lt;template&gt;</code> 标签，正常情况下它无色无味，感知不到它的存在，甚至它下面的 img 都不会被下载，script 都不会被执行。<template> 就如它的名字一样，它只是一个模版，只有到你用到它时，它才会变得有意义。</template></p><p>Shadow DOM 则是原生组件封装的基本工具，它可以实现组件与组件之间的独立性。<br>Custom Elements 是用来包装原生组件的容器，通过它，你就只需要写一个标签，就能得到一个完整的组件。</p><p>HTML Imports 则是 HTML 中类似于 ES6 Module 的一个东西，你可以直接 import 另一个 html 文件，然后使用其中的 DOM 节点。但是，由于 HTML Imports 和 ES6 Module 实在是太像了，并且除了 Chrome 以外没有浏览器愿意实现它，所以它已经被废弃并不推荐使用了。未来会使用 ES6 Module 来取代它，但是现在貌似还没有取代的方案，在新版的 Chrome 中这个功能已经被删除了，并且在使用的时候会在 Console 中给出警告。警告中说使用 ES Modules 来取代，但是我测试在 Chrome 71 中 ES Module 会强制检测文件的 MIME 类型必须为 JavaScript 类型，应该是暂时还没有实现支持。</p><p><img src="https://user-gold-cdn.xitu.io/2018/10/18/16684f2ad0409535?imageslim"></p><h5 id="Shadow-DOM"><a href="#Shadow-DOM" class="headerlink" title="Shadow DOM"></a>Shadow DOM</h5><p>DOM，在 HTML 中作为一个最基础的骨架而存在，它是一个树结构，树上的每一个节点都是 HTML 中的一部分。DOM 作为一棵树，它拥有着上下级的层级关系，我们通常使用“父节点”、“子节点”、“兄弟节点”等来进行描述（当然有人觉得这些称谓强调性别，所以也创造了一些性别无关的称谓）。子节点在一定程度上会继承父节点的一些东西，也会因兄弟节点而产生一定的影响，比较明显的是在应用 CSS Style 的时候，子节点会从父节点那里继承一些样式。</p><p>而 Shadow DOM，也是 DOM 的一种，所以它也是一颗树，只不过它是长在 DOM 树上的一棵特殊的子树。</p><p>Shadow DOM 的特别之处就在于它致力于创建一个相对独立的一个空间，虽然也是长在 DOM 树上的，但是它的环境却是与外界隔离的，当然这个隔离是相对的，在这个隔离空间中，你可以选择性地从 DOM 树上的父节点继承一些属性，甚至是继承一棵 DOM 树进来。<br>利用 Shadow DOM 的隔离性，我们就可以创造原生的 HTML 组件了。<br>实际上，浏览器已经通过 Shadow DOM 实现了一些组件了，只是我们使用过却没有察觉而已，这也是 Shadow DOM 封装的组件的魅力所在：你只管写一个 HTML 标签，其他的交给我。（是不是有点像 React 的 JSX 啊？）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">src</span>=<span class="string">&quot;./video.mp4&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/10/18/16684f31a0ba2ada?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br><img src="https://user-gold-cdn.xitu.io/2018/10/18/16684f3402275323?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><blockquote><p>注：浏览器默认隐藏自身的 Shadow DOM 实现，但如果是用户通过脚本创造的 Shadow DOM，是不会被隐藏的。<br><img src="https://user-gold-cdn.xitu.io/2018/10/18/16684f3694275a9b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>shadow DOM 中的节点大多都有 pseudo 属性，根据这个属性，你就可以在外面编写 CSS 样式来控制对应的节点样式了。比如，将上面这个<br>pseudo&#x3D;”-webkit-media-controls-overlay-play-button” 的 input 按钮的背景色改为橙色：</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-overlay-play-button &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/10/18/16684f3b4eabacd8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><p>由于 Shadow DOM 实际上也是 DOM 的一种，所以在 Shadow DOM 中还可以继续嵌套 Shadow DOM，就像上面那样。</p><p>浏览器中还有很多 Element 都使用了 Shadow DOM 的形式进行封装，比如 <code>&lt;input&gt;</code>、<code>&lt;select&gt;</code>、<code>&lt;audio&gt;</code> 等，这里就不一一展示了。<br>由于 Shadow DOM 的隔离性，所以即便是你在外面写了个样式：<code>div &#123; background-color: red !important; &#125;</code>，Shadow DOM 内部的 div 也不会受到任何影响。</p><p>也就是说，写样式的时候，该用 id 的时候就用 id，该用 class 的时候就用 class，一个按钮的 class 应该写成 .button 就写成 .button。完全不用考虑当前组件中的 id、class 可能会与其他组件冲突，你只要确保一个组件内部不冲突就好——这很容易做到。</p><p>这解决了现在绝大多数的组件化框架都面临的问题：Element 的 class(className) 到底怎么写？用前缀命名空间的形式会导致 class 名太长，像这样：<code>.header-nav-list-sublist-button-icon</code>；而使用一些 CSS-in-JS 工具，可以创造一些唯一的 class 名称，像这样：<code>.Nav__welcomeWrapper___lKXTg</code>，这样的名称仍旧有点长，还带了冗余信息。</p><h5 id="ShadowRoot"><a href="#ShadowRoot" class="headerlink" title="ShadowRoot"></a>ShadowRoot</h5><p>ShadowRoot 是 Shadow DOM 下面的根，你可以把它当做 DOM 中的 <body> 一样看待，但是它不是 <body>，所以你不能使用 <body> 上的一些属性，甚至它不是一个节点。</body></body></body></p><p>你可以通过 ShadowRoot 下面的 appendChild、querySelectorAll 之类的属性或方法去操作整个 Shadow DOM 树。</p><p>对于一个普通的 Element，比如 <code>&lt;div&gt;</code>，你可以通过调用它上面的 attachShadow 方法来创建一个 ShadowRoot（还有一个 createShadowRoot 方法，已经过时不推荐使用），attachShadow 接受一个对象进行初始化：<code>&#123; mode: &#39;open&#39; &#125;</code>，这个对象有一个 mode 属性，它有两个取值：’open’ 和 ‘closed’，这个属性是在创造 ShadowRoot 的时候需要初始化提供的，并在创建 ShadowRoot 之后成为一个只读属性。<br>mode: ‘open’ 和 mode: ‘closed’ 有什么区别呢？在调用 attachShadow 创建 ShadowRoot 之后，attachShdow 方法会返回 ShadowRoot 对象实例，你可以通过这个返回值去构造整个 Shadow DOM。当 mode 为 ‘open’ 时，在用于创建 ShadowRoot 的外部普通节点（比如<code> &lt;div&gt;</code>）上，会有一个 shadowRoot 属性，这个属性也就是创造出来的那个 ShadowRoot，也就是说，在创建 ShadowRoot 之后，还是可以在任何地方通过这个属性再得到 ShadowRoot，继续对其进行改造；而当 mode 为 ‘closed’ 时，你将不能再得到这个属性，这个属性会被设置为 null，也就是说，你只能在 attachShadow 之后得到 ShadowRoot 对象，用于构造整个 Shadow DOM，一旦你失去对这个对象的引用，你就无法再对 Shadow DOM 进行改造了。</p><p>可以从上面 Shadow DOM 的截图中看到 #shadow-root (user-agent) 的字样，这就是 ShadowRoot 对象了，而括号中的 user-agent 表示这是浏览器内部实现的 Shadow DOM，如果使用通过脚本自己创建的 ShadowRoot，括号中会显示为 open 或 closed 表示 Shadow DOM 的 mode。</p><p><img src="https://user-gold-cdn.xitu.io/2018/10/18/16684f3f3702ee88?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><blockquote><p>浏览器内部实现的 user-agent 的 mode 为 closed，所以你不能通过节点的 ShadowRoot 属性去获得其 ShadowRoot 对象，也就意味着你不能通过脚本对这些浏览器内部实现的 Shadow DOM 进行改造。</p></blockquote><p><a href="https://juejin.im/post/5bc7ead7f265da0afc2c2c6b">链接</a></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;今日读了掘金上面的一篇文章，讲的是html组件。&quot;&gt;&lt;a href=&quot;#今日读了掘金上面的一篇文章，讲的是html组件。&quot; class=&quot;headerlink&quot; title=&quot;今日读了掘金上面的一篇文章，讲的是html组件。&quot;&gt;&lt;/a&gt;今日读了掘金上面的一篇文章，讲的是html组件。&lt;/h1&gt;&lt;h4 id=&quot;四大-Web-组件标准&quot;&gt;&lt;a href=&quot;#四大-Web-组件标准&quot; class=&quot;headerlink&quot; title=&quot;四大 Web 组件标准&quot;&gt;&lt;/a&gt;四大 Web 组件标准&lt;/h4&gt;</summary>
    
    
    
    <category term="html" scheme="http://onlyh.github.io/categories/html/"/>
    
    
    <category term="语言" scheme="http://onlyh.github.io/tags/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="理解" scheme="http://onlyh.github.io/tags/%E7%90%86%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ES6系列-decorator</title>
    <link href="http://onlyh.github.io/post/6ff55e88.html"/>
    <id>http://onlyh.github.io/post/6ff55e88.html</id>
    <published>2023-03-07T09:41:41.172Z</published>
    <updated>2023-03-07T13:09:45.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>decorator：修饰器是一个函数，修改行为，修改类的行为。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">readonly</span> = (<span class="params">target, name, descriptor</span>) =&gt; &#123;</span><br><span class="line">        descriptor.<span class="property">writable</span> = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> descriptor</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">        @readonly</span><br><span class="line">        <span class="title function_">time</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;2012-12-12&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>()</span><br><span class="line">    test.<span class="property">time</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;reset time&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">time</span>())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">typename</span> = (<span class="params">target, name, descriptor</span>) =&gt; &#123;</span><br><span class="line">        target.<span class="property">myname</span> = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    @typename</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;类的修饰&#x27;</span>, <span class="title class_">Test</span>.<span class="property">myname</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">log</span> = (<span class="params">type</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">target, name, descriptor</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> src_method = descriptor.<span class="property">value</span>;</span><br><span class="line">            descriptor.<span class="property">value</span> = <span class="function">(<span class="params">...arg</span>)=&gt;</span>&#123;</span><br><span class="line">                src_method.<span class="title function_">apply</span>(target.<span class="property">arg</span>);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`log <span class="subst">$&#123;type&#125;</span>`</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">AD</span>&#123;</span><br><span class="line">        @<span class="title function_">log</span>(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">        <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ad is show&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        @<span class="title function_">log</span>(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">        <span class="title function_">click</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ad is click&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> ad = <span class="keyword">new</span> <span class="title function_">AD</span>()</span><br><span class="line">    ad.<span class="title function_">show</span>()</span><br><span class="line">    ad.<span class="title function_">click</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    ad is show</span></span><br><span class="line"><span class="comment">    log show</span></span><br><span class="line"><span class="comment">    ad is click</span></span><br><span class="line"><span class="comment">    log click</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>ES6系列-generator</title>
    <link href="http://onlyh.github.io/post/963420eb.html"/>
    <id>http://onlyh.github.io/post/963420eb.html</id>
    <published>2023-03-07T09:41:41.172Z</published>
    <updated>2023-03-07T13:09:45.234Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li>generator基本定义,返回的结果类似于Iterator，其实就是返回的Iterator接口，当函数运行的时候，调用一次next(),会执行一个yield.一个遍历器生成函数，赋值给Symbol.iterator，从而使这个接口Iterator</li><li>任何一个iterator接口都会指向Symbol.iterator属性上<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异步编程的解决方案</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> fn = <span class="keyword">function</span>* () &#123;</span><br><span class="line">        <span class="keyword">yield</span> <span class="string">&#x27;a&#x27;</span></span><br><span class="line">        <span class="keyword">yield</span> <span class="string">&#x27;b&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;c&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> test = <span class="title function_">fn</span>()</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">next</span>())</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#123;value: &quot;a&quot;, done: false&#125;</span></span><br><span class="line">    <span class="comment">//&#123;value: &quot;b&quot;, done: false&#125;</span></span><br><span class="line">    <span class="comment">//&#123;value: &quot;c&quot;, done: true&#125;</span></span><br><span class="line">    <span class="comment">//&#123;value: undefined, done: true&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  改写Iterator，使用for..of循环对象</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = &#123;&#125;</span><br><span class="line">    obj[<span class="title class_">Symbol</span>.<span class="property">iterator</span>] = <span class="keyword">function</span>* () &#123;</span><br><span class="line">        <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">        <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> obj) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(value)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        1</span></span><br><span class="line"><span class="comment">        2</span></span><br><span class="line"><span class="comment">        3</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 什么时候优势最大 -- 状态机  a-b-c-a...</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> state = <span class="keyword">function</span>* () &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">yield</span> <span class="string">&#x27;a&#x27;</span></span><br><span class="line">            <span class="keyword">yield</span> <span class="string">&#x27;b&#x27;</span></span><br><span class="line">            <span class="keyword">yield</span> <span class="string">&#x27;c&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> status = <span class="title function_">state</span>()</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#123;value: &quot;a&quot;, done: false&#125;</span></span><br><span class="line">    <span class="comment">// &#123;value: &quot;b&quot;, done: false&#125;</span></span><br><span class="line">    <span class="comment">// &#123;value: &quot;c&quot;, done: false&#125;</span></span><br><span class="line">    <span class="comment">// &#123;value: &quot;a&quot;, done: false&#125;</span></span><br><span class="line">    <span class="comment">// &#123;value: &quot;b&quot;, done: false&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 语法糖 async</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> state = <span class="keyword">async</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">await</span> <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">            <span class="keyword">await</span> <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> status = <span class="title function_">state</span>()</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(status.<span class="title function_">next</span>())</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽奖逻辑</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">draw</span> = count =&gt; &#123;</span><br><span class="line">        <span class="comment">//具体逻辑。。</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`还剩下<span class="subst">$&#123;count&#125;</span>次`</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> residus = <span class="keyword">function</span>* (count) &#123;</span><br><span class="line">        <span class="keyword">while</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            count--;</span><br><span class="line">            <span class="keyword">yield</span> <span class="title function_">draw</span>(count)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> start = <span class="title function_">residus</span>(<span class="number">5</span>) <span class="comment">//5为从后台取得值</span></span><br><span class="line">    <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">    btn.<span class="property">innerHTML</span> = <span class="string">&#x27;按钮&#x27;</span></span><br><span class="line">    btn.<span class="property">id</span> = <span class="string">&#x27;startBtn&#x27;</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(btn)</span><br><span class="line">    btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        start.<span class="title function_">next</span>()</span><br><span class="line">    &#125;, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//长轮询</span></span><br><span class="line">    <span class="keyword">let</span> ajax = <span class="keyword">function</span>* () &#123;</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">reslove</span>(&#123; <span class="attr">code</span>: <span class="number">1</span> &#125;)</span><br><span class="line">            &#125;, <span class="number">200</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">pull</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> generator = <span class="title function_">ajax</span>()</span><br><span class="line">        <span class="keyword">let</span> step = generator.<span class="title function_">next</span>()</span><br><span class="line">        step.<span class="property">value</span>.<span class="title function_">then</span>(<span class="function"><span class="params">d</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (d.<span class="property">value</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;wait&#x27;</span>)</span><br><span class="line">                &#125;, <span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(d)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="js" scheme="http://onlyh.github.io/categories/js/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>运行babel，webpack，rollop.js用法</title>
    <link href="http://onlyh.github.io/post/1efdce30.html"/>
    <id>http://onlyh.github.io/post/1efdce30.html</id>
    <published>2023-03-07T09:41:41.171Z</published>
    <updated>2023-03-07T13:09:45.227Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><p>运行 <code>npm init -y</code></p></li><li><p><code>npm i --save-dev babel-core babel-preset-es2015 babel-preset-latest</code></p></li><li><p>创建.babelrc</p></li><li><p><code>npm install --save-dev babel-cli</code><br>本地就不能用 babel 命令了，在 package.json 文件中添加：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;script&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;babel src -d lib&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>创建 <code>./src/index.js</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">把babel-preset-es2015换成babel-preset-env</span><br><span class="line"></span><br><span class="line">babel-preset-env包括了之前的：</span><br><span class="line"></span><br><span class="line">babel-preset-es2015, babel-preset-es2016, babel-preset-es2017</span><br><span class="line"></span><br><span class="line">babel-preset-latest</span><br><span class="line"></span><br><span class="line">其他社区的es20xx</span><br><span class="line"></span><br><span class="line">babel-preset-node5, babel-preset-es2015-node, 等等</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> <span class="string">&quot;build&quot;</span>: <span class="string">&quot;babel src -d lib&quot;</span>,</span><br></pre></td></tr></table></figure></li><li><p>开发环境 webpack<br><code>npm i webpack babel-loader --save-dev</code></p></li><li><p>配置webpack.config.js</p></li><li><p>配置package.json中的script</p></li><li><p>运行 npm start</p></li></ul><p>运行项目需要安装webpack-dev-server，webpack4x后要区分development和production<br>不支持loader-core@8，需要卸载<br><code>npm un loader-core</code><br>安装<br><code>npm i --save-dev babel-loader@7 </code></p><h4 id="rollup-js-lt-—-react-vue都是这样打包的"><a href="#rollup-js-lt-—-react-vue都是这样打包的" class="headerlink" title="rollup.js   &lt;—-react,vue都是这样打包的"></a>rollup.js   &lt;—-react,vue都是这样打包的</h4><ul><li><p>Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。Rollup 对代码模块使用新的标准化格式</p></li><li><p><code>npm init</code></p></li><li><p><code>npm i rollup-plugin-node-resolve rollup-plugin-babel babel-plugin-external-helpers babel-preset-latest</code></p></li><li><p>配置 .babelrc</p></li><li><p>配置 rollup.config.js</p></li></ul><h4 id="rollup与webpack"><a href="#rollup与webpack" class="headerlink" title="rollup与webpack"></a>rollup与webpack</h4><p>rollup功能单一，webpack功能强大。<br>工具要尽量功能单一，可集成，可扩展。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;运行 &lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm i --save-dev babel-core babel-preset-es2015 babel-preset-latest&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建.babelrc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;npm install --save-dev babel-cli&lt;/code&gt;&lt;br&gt;本地就不能用 babel 命令了，在 package.json 文件中添加：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;script&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&amp;quot;build&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;babel src -d lib&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建 &lt;code&gt;./src/index.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;把babel-preset-es2015换成babel-preset-env&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;babel-preset-env包括了之前的：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;babel-preset-es2015, babel-preset-es2016, babel-preset-es2017&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;babel-preset-latest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其他社区的es20xx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;babel-preset-node5, babel-preset-es2015-node, 等等&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;build&amp;quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;quot;babel src -d lib&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开发环境 webpack&lt;br&gt;&lt;code&gt;npm i webpack babel-loader --save-dev&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置webpack.config.js&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置package.json中的script&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行 npm start&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行项目需要安装webpack-dev-server，webpack4x后要区分development和production&lt;br&gt;不支持loader-core@8，需要卸载&lt;br&gt;&lt;code&gt;npm un loader-core&lt;/code&gt;&lt;br&gt;安装&lt;br&gt;&lt;code&gt;npm i --save-dev babel-loader@7 &lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="babel" scheme="http://onlyh.github.io/categories/babel/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>css修改select样式</title>
    <link href="http://onlyh.github.io/post/3f264de3.html"/>
    <id>http://onlyh.github.io/post/3f264de3.html</id>
    <published>2023-03-07T09:41:41.171Z</published>
    <updated>2023-03-07T13:09:45.228Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>select是有默认样式的，select的一些默认样式我们很难修改，比如图标的替换。<br>参考了一些别人的例子，整理下，如果要切换图片。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> select &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="comment">/*将默认的select选择框样式清除*/</span></span><br><span class="line">  appearance: none;</span><br><span class="line">  -moz-appearance: none;</span><br><span class="line">  -webkit-appearance: none;</span><br><span class="line">  <span class="comment">/*在选择框的最右侧中间显示小箭头图片*/</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;http://ourjs.github.io/static/2015/arrow.png&quot;</span>) no-repeat scroll right center transparent <span class="meta">!important</span>;</span><br><span class="line">  <span class="comment">/*为下拉小箭头留出一点位置，避免被文字覆盖*/</span></span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;select是有默认样式的，select的一些默认样式我们很难修改，比如图标的替换。&lt;br&gt;参考了一些别人的例子，整理下，如果要切换图片。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="css" scheme="http://onlyh.github.io/categories/css/"/>
    
    
    <category term="编程" scheme="http://onlyh.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="学习" scheme="http://onlyh.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
